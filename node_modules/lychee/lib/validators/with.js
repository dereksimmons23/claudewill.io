// Generated by CoffeeScript 1.3.3
var CustomValidator, RegExpValidator, WithValidator;

module.exports = WithValidator = (function() {

  WithValidator.detectBy = ['with'];

  function WithValidator(params) {
    this.params = params;
  }

  WithValidator.prototype.validate = function(value, valid, model) {
    var validator;
    valid(true);
    validator = void 0;
    if (this.params["with"] instanceof RegExp) {
      validator = RegExpValidator;
    } else if ('string' === typeof this.params["with"]) {
      validator = CustomValidator;
    } else if (this.params["with"] instanceof Object) {
      validator = this.params["with"];
    }
    if (!validator) {
      return valid(false, 'no known validator');
    }
    return (new validator(this.params)).validate(value, valid, model);
  };

  return WithValidator;

})();

RegExpValidator = (function() {

  function RegExpValidator(params) {
    this.params = params;
  }

  RegExpValidator.prototype.validate = function(value, valid) {
    return valid(this.params["with"].test(value), this.params.message || 'does not follow required format');
  };

  return RegExpValidator;

})();

CustomValidator = (function() {

  function CustomValidator(params) {
    this.params = params;
  }

  CustomValidator.prototype.validate = function(value, valid, model) {
    var validator;
    validator = model[this.params["with"]];
    return validator.call(model, value, valid);
  };

  return CustomValidator;

})();
